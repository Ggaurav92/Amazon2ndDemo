<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="191526" started-at="2020-02-11T07:22:08 GMT" finished-at="2020-02-11T07:25:20 GMT">
    <groups>
    </groups>
    <test name="Test" duration-ms="191526" started-at="2020-02-11T07:22:08 GMT" finished-at="2020-02-11T07:25:20 GMT">
      <class name="com.amazon.testpage.CreateWishList">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.amazon.testpage.CreateWishList@6950e31]" name="beforeClass" is-config="true" duration-ms="20316" started-at="2020-02-11T07:23:39 GMT" finished-at="2020-02-11T07:23:59 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.amazon.testpage.CreateWishList@6950e31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-02-11T07:23:59 GMT" finished-at="2020-02-11T07:23:59 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="FirstTest()[pri:1, instance:com.amazon.testpage.CreateWishList@6950e31]" name="FirstTest" duration-ms="10985" started-at="2020-02-11T07:23:59 GMT" finished-at="2020-02-11T07:24:10 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.amazon.testpage.CreateWishList@6950e31]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-02-11T07:24:10 GMT" finished-at="2020-02-11T07:24:10 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.amazon.testpage.CreateWishList@6950e31]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-02-11T07:24:10 GMT" finished-at="2020-02-11T07:24:10 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="SecondTest()[pri:0, instance:com.amazon.testpage.CreateWishList@6950e31]" name="SecondTest" duration-ms="3773" started-at="2020-02-11T07:24:10 GMT" depends-on-methods="com.amazon.testpage.CreateWishList.FirstTest" finished-at="2020-02-11T07:24:14 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.amazon.testpage.CreateWishList@6950e31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-11T07:24:14 GMT" finished-at="2020-02-11T07:24:14 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.amazon.testpage.CreateWishList@6950e31]" name="beforeMethod" is-config="true" duration-ms="5" started-at="2020-02-11T07:24:14 GMT" finished-at="2020-02-11T07:24:14 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="FourthTest()[pri:0, instance:com.amazon.testpage.CreateWishList@6950e31]" name="FourthTest" duration-ms="22995" started-at="2020-02-11T07:24:14 GMT" depends-on-methods="com.amazon.testpage.CreateWishList.SecondTest" finished-at="2020-02-11T07:24:37 GMT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Private!!!] but found [Private]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Private!!!] but found [Private]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.amazon.testpage.CreateWishList.FourthTest(CreateWishList.java:154)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FourthTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.amazon.testpage.CreateWishList@6950e31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-11T07:24:37 GMT" finished-at="2020-02-11T07:24:37 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.amazon.testpage.CreateWishList@6950e31]" name="afterClass" is-config="true" duration-ms="42682" started-at="2020-02-11T07:24:37 GMT" finished-at="2020-02-11T07:25:20 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.amazon.testpage.CreateWishList@6950e31]" name="afterSuite" is-config="true" duration-ms="316" started-at="2020-02-11T07:25:20 GMT" finished-at="2020-02-11T07:25:20 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.amazon.testpage.CreateWishList -->
      <class name="com.amazon.testpage.LoginTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.amazon.testpage.LoginTest@2db7a79b]" name="beforeClass" is-config="true" duration-ms="6111" started-at="2020-02-11T07:22:58 GMT" finished-at="2020-02-11T07:23:04 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.amazon.testpage.LoginTest@2db7a79b]" name="beforeMethod" is-config="true" duration-ms="2628" started-at="2020-02-11T07:23:04 GMT" finished-at="2020-02-11T07:23:07 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ScenarioFive(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.amazon.testpage.LoginTest@2db7a79b]" name="ScenarioFive" duration-ms="3996" started-at="2020-02-11T07:23:07 GMT" data-provider="getdatalogin" finished-at="2020-02-11T07:23:11 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[g.gaurav2812@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TWF1bGlAMjgxMiQ=]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hello, Gaurav]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[invalidEmail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[invPass123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[8793100405]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScenarioFive -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.amazon.testpage.LoginTest@2db7a79b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-02-11T07:23:11 GMT" finished-at="2020-02-11T07:23:11 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.amazon.testpage.LoginTest@2db7a79b]" name="beforeMethod" is-config="true" duration-ms="729" started-at="2020-02-11T07:23:11 GMT" finished-at="2020-02-11T07:23:12 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ScenarioFour()[pri:0, instance:com.amazon.testpage.LoginTest@2db7a79b]" name="ScenarioFour" duration-ms="874" started-at="2020-02-11T07:23:12 GMT" finished-at="2020-02-11T07:23:13 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScenarioFour -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.amazon.testpage.LoginTest@2db7a79b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-11T07:23:13 GMT" finished-at="2020-02-11T07:23:13 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.amazon.testpage.LoginTest@2db7a79b]" name="beforeMethod" is-config="true" duration-ms="740" started-at="2020-02-11T07:23:13 GMT" finished-at="2020-02-11T07:23:13 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ScenarioOne(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.amazon.testpage.LoginTest@2db7a79b]" name="ScenarioOne" duration-ms="23430" started-at="2020-02-11T07:23:13 GMT" data-provider="getdatalogin" finished-at="2020-02-11T07:23:37 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[g.gaurav2812@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TWF1bGlAMjgxMiQ=]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hello, Gaurav]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[invalidEmail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[invPass123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[8793100405]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScenarioOne -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.amazon.testpage.LoginTest@2db7a79b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-11T07:23:37 GMT" finished-at="2020-02-11T07:23:37 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.amazon.testpage.LoginTest@2db7a79b]" name="afterClass" is-config="true" duration-ms="1876" started-at="2020-02-11T07:23:37 GMT" finished-at="2020-02-11T07:23:39 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.amazon.testpage.LoginTest -->
      <class name="com.amazon.testpage.RegistrationTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.amazon.testpage.RegistrationTest@4671e53b]" name="beforeClass" is-config="true" duration-ms="8120" started-at="2020-02-11T07:22:08 GMT" finished-at="2020-02-11T07:22:16 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.amazon.testpage.RegistrationTest@4671e53b]" name="beforeMethod" is-config="true" duration-ms="3601" started-at="2020-02-11T07:22:18 GMT" finished-at="2020-02-11T07:22:21 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ScenarioFour(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.amazon.testpage.RegistrationTest@4671e53b]" name="ScenarioFour" duration-ms="2995" started-at="2020-02-11T07:22:21 GMT" data-provider="getdata" finished-at="2020-02-11T07:22:24 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[Virat Kohli]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8421352651]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[example.amazon@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Abcdef123]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Hello, Virat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScenarioFour -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.amazon.testpage.RegistrationTest@4671e53b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-11T07:22:24 GMT" finished-at="2020-02-11T07:22:24 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.amazon.testpage.RegistrationTest@4671e53b]" name="beforeMethod" is-config="true" duration-ms="2921" started-at="2020-02-11T07:22:24 GMT" finished-at="2020-02-11T07:22:27 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ScenarioOne(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.amazon.testpage.RegistrationTest@4671e53b]" name="ScenarioOne" duration-ms="29616" started-at="2020-02-11T07:22:27 GMT" data-provider="getdata" finished-at="2020-02-11T07:22:57 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA[Virat Kohli]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8421352651]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[example.amazon@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Abcdef123]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Hello, Virat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScenarioOne -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.amazon.testpage.RegistrationTest@4671e53b]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-02-11T07:22:57 GMT" finished-at="2020-02-11T07:22:57 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.amazon.testpage.RegistrationTest@4671e53b]" name="afterClass" is-config="true" duration-ms="1312" started-at="2020-02-11T07:22:57 GMT" finished-at="2020-02-11T07:22:58 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.amazon.testpage.RegistrationTest@4671e53b]" name="afterSuite" is-config="true" duration-ms="165" started-at="2020-02-11T07:25:20 GMT" finished-at="2020-02-11T07:25:20 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.amazon.testpage.RegistrationTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
